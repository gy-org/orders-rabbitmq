---
# Source: orders/templates/rabbitmq-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ${APP_NAME}
data:
---
# Source: orders/templates/configmap.yml
apiVersion: v1
kind: ConfigMap
metadata:
  name: orders
data:
  RETAIL_ORDERS_MESSAGING_PROVIDER: rabbitmq
  SPRING_DATASOURCE_URL: jdbc:postgresql://orders-postgresql:5432/orders
  SPRING_RABBITMQ_ADDRESSES: amqp://orders-rabbitmq:5672
# Source: orders/templates/rabbitmq-service.yaml
---
apiVersion: v1
kind: Service
metadata:
  name: ${APP_NAME}
  labels:
    helm.sh/chart: orders-0.0.1
    app.kubernetes.io/name: orders
    app.kubernetes.io/instance: orders
    app.kubernetes.io/component: rabbitmq
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 5672
      targetPort: amqp
      protocol: TCP
      name: amqp
    - port: 15672
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: orders
    app.kubernetes.io/instance: orders
    app.kubernetes.io/component: rabbitmq
---
# Source: orders/templates/rabbitmq-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ${APP_NAME}
  labels:
    helm.sh/chart: orders-0.0.1
    app.kubernetes.io/name: orders
    app.kubernetes.io/instance: orders
    app.kubernetes.io/component: rabbitmq
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  serviceName: ${APP_NAME}
  selector:
    matchLabels:
      app: ${APP_NAME}
      app.kubernetes.io/name: orders
      app.kubernetes.io/instance: orders
      app.kubernetes.io/component: rabbitmq
  template:
    metadata:
      labels:
        app: ${APP_NAME}
        app.kubernetes.io/name: orders
        app.kubernetes.io/instance: orders
        app.kubernetes.io/component: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: "public.ecr.aws/docker/library/rabbitmq:3-management"
          imagePullPolicy: IfNotPresent
          ports:
          - name: amqp
            containerPort: 5672
            protocol: TCP
          - name: http
            containerPort: 15672
            protocol: TCP
          volumeMounts:
          - name: data
            mountPath: "/var/lib/rabbitmq/mnesia"
      volumes:
      - name: data
        emptyDir: {}
        image: "${IMAGE}"
        ports:
        - containerPort: 80
